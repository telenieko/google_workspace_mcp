1. Get the application URL by running these commands:
{{- if .Values.ingress.enabled }}
{{- range $host := .Values.ingress.hosts }}
  {{- range .paths }}
  http{{ if $.Values.ingress.tls }}s{{ end }}://{{ $host.host }}{{ .path }}
  {{- end }}
{{- end }}
{{- else if contains "NodePort" .Values.service.type }}
  export NODE_PORT=$(kubectl get --namespace {{ .Release.Namespace }} -o jsonpath="{.spec.ports[0].nodePort}" services {{ include "workspace-mcp.fullname" . }})
  export NODE_IP=$(kubectl get nodes --namespace {{ .Release.Namespace }} -o jsonpath="{.items[0].status.addresses[0].address}")
  echo http://$NODE_IP:$NODE_PORT
{{- else if contains "LoadBalancer" .Values.service.type }}
     NOTE: It may take a few minutes for the LoadBalancer IP to be available.
           You can watch the status of by running 'kubectl get --namespace {{ .Release.Namespace }} svc -w {{ include "workspace-mcp.fullname" . }}'
  export SERVICE_IP=$(kubectl get svc --namespace {{ .Release.Namespace }} {{ include "workspace-mcp.fullname" . }} --template "{{"{{ range (index .status.loadBalancer.ingress 0) }}{{.}}{{ end }}"}}")
  echo http://$SERVICE_IP:{{ .Values.service.port }}
{{- else if contains "ClusterIP" .Values.service.type }}
  export POD_NAME=$(kubectl get pods --namespace {{ .Release.Namespace }} -l "app.kubernetes.io/name={{ include "workspace-mcp.name" . }},app.kubernetes.io/instance={{ .Release.Name }}" -o jsonpath="{.items[0].metadata.name}")
  export CONTAINER_PORT=$(kubectl get pod --namespace {{ .Release.Namespace }} $POD_NAME -o jsonpath="{.spec.containers[0].ports[0].containerPort}")
  echo "Visit http://127.0.0.1:8080 to use your application"
  kubectl --namespace {{ .Release.Namespace }} port-forward $POD_NAME 8080:$CONTAINER_PORT
{{- end }}

2. Check the health of your Google Workspace MCP Server:
{{- if .Values.healthCheck.enabled }}
  kubectl get pods --namespace {{ .Release.Namespace }} -l "app.kubernetes.io/name={{ include "workspace-mcp.name" . }},app.kubernetes.io/instance={{ .Release.Name }}"
  
  # View application logs
  kubectl logs --namespace {{ .Release.Namespace }} -l "app.kubernetes.io/name={{ include "workspace-mcp.name" . }},app.kubernetes.io/instance={{ .Release.Name }}"
{{- end }}

3. Configuration Summary:
{{- if .Values.singleUserMode }}
   - Mode: Single-user
{{- else }}
   - Mode: Multi-user
{{- end }}
{{- if .Values.tools.enabled }}
   - Enabled Tools: {{ join ", " .Values.tools.enabled }}
{{- else }}
   - Enabled Tools: All Google Workspace tools
{{- end }}
{{- if eq .Values.env.MCP_ENABLE_OAUTH21 "true" }}
   - OAuth 2.1: Enabled
{{- else }}
   - OAuth 2.1: Disabled (using legacy OAuth 2.0)
{{- end }}

4. Important Notes:
   - Make sure you have configured your Google OAuth credentials in the secret
   - The application requires internet access to reach Google APIs
   - OAuth callback URL: {{ if .Values.env.WORKSPACE_EXTERNAL_URL }}{{ .Values.env.WORKSPACE_EXTERNAL_URL }}{{ else }}{{ default "http://localhost" .Values.env.WORKSPACE_MCP_BASE_URI }}:{{ .Values.env.WORKSPACE_MCP_PORT }}{{ end }}/oauth2callback

For more information about the Google Workspace MCP Server, visit:
https://github.com/taylorwilsdon/google_workspace_mcp